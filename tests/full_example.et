#@
Example  of any LP (Lisapet) abilities.
# @intr@exit
For now we can:

1. loops: 
    while, 
    for init; condition; post-expression
    for val <- iter() # magic for now
    for val <- [a,r,r,a,y] 

2. if-else statement
    if expr
        expr-block
    else
        expr-blok

3. compare operators and complex bool-expressions, including unary (!)
    a < 100 && b > 4 || a + b >= 1

4. match-case
    match expr
        a -> expr1
        b -> expr2
        _ -> default-expression

5. complex math expressions, including unary (-): 
    res = a + b * (c -10 ** 2) / (7 - 5 * d)

6. functions 
    func definition: 
        func foo(a, b, c)
            a + b + c
    function call: res = foo(1, 2, 3) 

7. Lists
    declaration: nums = [1,2,3]
    usage:
        set val: nums[0] = 5
        get val: print(nums[2])

8. Dict
    declaration: dd = {'aa': 'hello', 'bb': 333}
    set val: dd['cc'] = 555
    get val: print(dd['aa'])


--
@#

func fooPow2(x)
    # simplest math function
    return x * x

func unar(cond)
    inv = false
    if cond && ! inv
        print('inverted')

func sum(nums)
    # for over list
    res = 0
    print(33, nums)
    for n <- nums
        res += n
    res

func prime(x)
    # while
    print('--------------------- $$$ ---------------------')
    n = 2
    q = n
    print('n:', n)
    while n ** 2 < x
        if n >3
            return
#        if x % n == 0
#            return false
        n += 1
    true

func fact(x)
    # for over init-, condition-, post- expressions
    r = 1
    for i=2; i <= x; i += 1
        r *= i
    r

func printVal(data, key)
    print(data[key])

# tests:
t1 = prime(7)

t2 = prime(8)

t3 = sum([1000, 200, 30, 4])
f10 = fact(10)

hello = "Hello print example!"
print(hello)
print("Hello print example!" + '!!')
print(fooPow2(5))
unar(true)
print( 10 )
print('is prime 11', t1)
print(t3)

colors = {'red':'#ff0000', 'green':'#00ff00', 'blue':'#0000ff'}
printVal(colors, 'green')
names = ['Alladin','Bob','Colin','Dude']

weekDays = dict
    1: 'Monday'
    2: 'Tuesday'
    3: 'Wednesday'
    4: 'Thursday'
    5: 'Friday'
    6: 'Saturday'
    7: 'Sunday'

weekDays[2] = 'Rururu'
printVal(weekDays, 2)


#@
@#
